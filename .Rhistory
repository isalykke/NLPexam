for (txt in txts[13]) {
#open the txt file
text <- read.table(paste0("./txts/", txt),
sep = "\n",
quote = "",
comment.char = "")
#find all metadata
speakers <- text[grepl("SPEAKERS|HOSTS", text$V1),]
speakers <- sub(".*:\t", "", speakers)
date <- lubridate::mdy(as.character(text[grepl("DATE", text$V1, fixed = TRUE),][[1]]))
title <- as.character(text[grepl("TITLE", text$V1, fixed = TRUE),][[1]])
title <- sub(".*:", "", title)
episode <- str_extract(as.character(text[grepl("EPISODE", text$V1, fixed = TRUE),][[1]]), "[0-9]+")
description <- as.character(text[grepl("DESCRIPTION", text$V1, fixed = TRUE),][[1]])
description <- sub(".*: ", "", description)
current_speaker <- str_extract(text$V1, "[A-Z]+")
is_copyright <- grepl("Copyright (c)", text$V1, fixed = TRUE)
#create a speaker_list (for filtering data)
speaker_list = tibble::enframe(as.vector(unlist(str_split(toupper(speakers), " & "))), name = NULL, value = "speaker")
speaker_list[["alias"]] <- str_extract(speaker_list[["speaker"]], "[A-Z]*")
speaker_list <- speaker_list %>% tidyr::gather(key = "col", value = "speaker", 1:2)
speaker_list <- speaker_list[, "speaker"]
name_regex <- paste(speaker_list[["speaker"]], collapse="|")
text3 <- text %>%
mutate(V1 = gsub(name_regex, "", V1),
V1 = str_replace(V1,"^:\\W*", ""))
#add all metadata and speakerdata to the dataframe:
text <- mutate(text,
current_speaker = current_speaker,
speakers = speakers,
date = date,
title = title,
episode = episode,
description = description,
copyright = is_copyright)
#loop over dataframe to find speaker in cases of longer monologues (e.i take the previous)
for (row in text$current_speaker) {
if (current_speaker[n] %ni% speaker_list$speaker & n > 1) {
current_speaker[n] = current_speaker[n-1]
}
test = data.frame(current_speaker)
n = n+1
}
#add new info to the dataframe (updated current_speaker + cleaned utterance) + filter by speaker + copyright
text <- text %>%
mutate(real_speaker = test$current_speaker,
utterance = text3$V1) %>%
filter(real_speaker %in% speaker_list[["speaker"]]) %>%
filter(copyright != TRUE) %>%
select(-c(copyright, V1, current_speaker))
}
#write.csv(final_data, file = "test.csv")
#Do you really want to copy the entire data frame each time you add a row? Probably not. Generate a list of each row using lapply and then stitch them together using do.call(rbind,...).
library(tidyverse)
`%ni%` = Negate(`%in%`)
txts <- list.files(path = "./txts/", pattern = "*.txt")
n = 1
for (txt in txts[13]) {
#open the txt file
text <- read.table(paste0("./txts/", txt),
sep = "\n",
quote = "",
comment.char = "")
#find all metadata
speakers <- text[grepl("SPEAKERS|HOSTS", text$V1),]
speakers <- sub(".*:\t", "", speakers)
date <- lubridate::mdy(as.character(text[grepl("DATE", text$V1, fixed = TRUE),][[1]]))
title <- as.character(text[grepl("TITLE", text$V1, fixed = TRUE),][[1]])
title <- sub(".*:", "", title)
episode <- str_extract(as.character(text[grepl("EPISODE", text$V1, fixed = TRUE),][[1]]), "[0-9]+")
description <- as.character(text[grepl("DESCRIPTION", text$V1, fixed = TRUE),][[1]])
description <- sub(".*: ", "", description)
current_speaker <- str_extract(text$V1, "[A-Z]+")
is_copyright <- grepl("Copyright (c)", text$V1, fixed = TRUE)
#create a speaker_list (for filtering data)
speaker_list = tibble::enframe(as.vector(unlist(str_split(toupper(speakers), " & "))), name = NULL, value = "speaker")
speaker_list[["alias"]] <- str_extract(speaker_list[["speaker"]], "[A-Z]*")
speaker_list <- speaker_list %>% tidyr::gather(key = "col", value = "speaker", 1:2)
speaker_list <- speaker_list[, "speaker"]
name_regex <- paste(speaker_list[["speaker"]], collapse="|")
text3 <- text %>%
mutate(V1 = gsub(name_regex, "", V1),
V1 = str_replace(V1,"^:\\W*", ""))
#add all metadata and speakerdata to the dataframe:
text <- mutate(text,
current_speaker = current_speaker,
speakers = speakers,
date = date,
title = title,
episode = episode,
description = description,
copyright = is_copyright)
#loop over dataframe to find speaker in cases of longer monologues (e.i take the previous)
for (row in text$current_speaker) {
if (current_speaker[n] %ni% speaker_list$speaker & n > 1) {
current_speaker[n] = current_speaker[n-1]
}
test = data.frame(current_speaker)
n = n+1
}
#add new info to the dataframe (updated current_speaker + cleaned utterance) + filter by speaker + copyright
text <- text %>%
mutate(real_speaker = test$current_speaker,
utterance = text3$V1) %>%
filter(real_speaker %in% speaker_list[["speaker"]]) %>%
filter(copyright != TRUE) %>%
select(-c(copyright, V1, current_speaker))
}
#write.csv(final_data, file = "test.csv")
#Do you really want to copy the entire data frame each time you add a row? Probably not. Generate a list of each row using lapply and then stitch them together using do.call(rbind,...).
library(tidyverse)
`%ni%` = Negate(`%in%`)
txts <- list.files(path = "./txts/", pattern = "*.txt")
n = 1
for (txt in txts[56]) {
#open the txt file
text <- read.table(paste0("./txts/", txt),
sep = "\n",
quote = "",
comment.char = "")
#find all metadata
speakers <- text[grepl("SPEAKERS|HOSTS", text$V1),]
speakers <- sub(".*:\t", "", speakers)
date <- lubridate::mdy(as.character(text[grepl("DATE", text$V1, fixed = TRUE),][[1]]))
title <- as.character(text[grepl("TITLE", text$V1, fixed = TRUE),][[1]])
title <- sub(".*:", "", title)
episode <- str_extract(as.character(text[grepl("EPISODE", text$V1, fixed = TRUE),][[1]]), "[0-9]+")
description <- as.character(text[grepl("DESCRIPTION", text$V1, fixed = TRUE),][[1]])
description <- sub(".*: ", "", description)
current_speaker <- str_extract(text$V1, "[A-Z]+")
is_copyright <- grepl("Copyright (c)", text$V1, fixed = TRUE)
#create a speaker_list (for filtering data)
speaker_list = tibble::enframe(as.vector(unlist(str_split(toupper(speakers), " & "))), name = NULL, value = "speaker")
speaker_list[["alias"]] <- str_extract(speaker_list[["speaker"]], "[A-Z]*")
speaker_list <- speaker_list %>% tidyr::gather(key = "col", value = "speaker", 1:2)
speaker_list <- speaker_list[, "speaker"]
name_regex <- paste(speaker_list[["speaker"]], collapse="|")
text3 <- text %>%
mutate(V1 = gsub(name_regex, "", V1),
V1 = str_replace(V1,"^:\\W*", ""))
#add all metadata and speakerdata to the dataframe:
text <- mutate(text,
current_speaker = current_speaker,
speakers = speakers,
date = date,
title = title,
episode = episode,
description = description,
copyright = is_copyright)
#loop over dataframe to find speaker in cases of longer monologues (e.i take the previous)
for (row in text$current_speaker) {
if (current_speaker[n] %ni% speaker_list$speaker & n > 1) {
current_speaker[n] = current_speaker[n-1]
}
test = data.frame(current_speaker)
n = n+1
}
#add new info to the dataframe (updated current_speaker + cleaned utterance) + filter by speaker + copyright
text <- text %>%
mutate(real_speaker = test$current_speaker,
utterance = text3$V1) %>%
filter(real_speaker %in% speaker_list[["speaker"]]) %>%
filter(copyright != TRUE) %>%
select(-c(copyright, V1, current_speaker))
}
#write.csv(final_data, file = "test.csv")
#Do you really want to copy the entire data frame each time you add a row? Probably not. Generate a list of each row using lapply and then stitch them together using do.call(rbind,...).
library(tidyverse)
`%ni%` = Negate(`%in%`)
txts <- list.files(path = "./txts/", pattern = "*.txt")
n = 1
for (txt in txts[56]) {
#open the txt file
text <- read.table(paste0("./txts/", txt),
sep = "\n",
quote = "",
comment.char = "")
#find all metadata
speakers <- text[grepl("SPEAKERS|HOSTS", text$V1),]
speakers <- sub(".*:\t", "", speakers)
date <- lubridate::mdy(as.character(text[grepl("DATE", text$V1, fixed = TRUE),][[1]]))
title <- as.character(text[grepl("TITLE", text$V1, fixed = TRUE),][[1]])
title <- sub(".*:", "", title)
episode <- str_extract(as.character(text[grepl("EPISODE", text$V1, fixed = TRUE),][[1]]), "[0-9]+")
description <- as.character(text[grepl("DESCRIPTION", text$V1, fixed = TRUE),][[1]])
description <- sub(".*: ", "", description)
current_speaker <- str_extract(text$V1, "[A-Z]+")
is_copyright <- grepl("Copyright (c)", text$V1, fixed = TRUE)
#create a speaker_list (for filtering data)
speaker_list = tibble::enframe(as.vector(unlist(str_split(toupper(speakers), " & "))), name = NULL, value = "speaker")
speaker_list[["alias"]] <- str_extract(speaker_list[["speaker"]], "[A-Z]*")
speaker_list <- speaker_list %>% tidyr::gather(key = "col", value = "speaker", 1:2)
speaker_list <- speaker_list[, "speaker"]
name_regex <- paste(speaker_list[["speaker"]], collapse="|")
text3 <- text %>%
mutate(V1 = gsub(name_regex, "", V1),
V1 = str_replace(V1,"^:\\W*", ""))
#add all metadata and speakerdata to the dataframe:
text <- mutate(text,
current_speaker = current_speaker,
speakers = speakers,
date = date,
title = title,
episode = episode,
description = description,
copyright = is_copyright)
#loop over dataframe to find speaker in cases of longer monologues (e.i take the previous)
for (row in text$current_speaker) {
if (current_speaker[n] %ni% speaker_list$speaker & n > 1) {
current_speaker[n] = current_speaker[n-1]
}
test = data.frame(current_speaker)
n = n+1
}
#add new info to the dataframe (updated current_speaker + cleaned utterance) + filter by speaker + copyright
text <- text %>%
mutate(real_speaker = test$current_speaker,
utterance = text3$V1) %>%
filter(real_speaker %in% speaker_list[["speaker"]]) %>%
filter(copyright != TRUE) %>%
select(-c(copyright, V1, current_speaker))
}
#write.csv(final_data, file = "test.csv")
#Do you really want to copy the entire data frame each time you add a row? Probably not. Generate a list of each row using lapply and then stitch them together using do.call(rbind,...).
warnings()
View(text)
library(tidyverse)
`%ni%` = Negate(`%in%`)
txts <- list.files(path = "./txts/", pattern = "*.txt")
n = 1
for (txt in txts[14]) {
#open the txt file
text <- read.table(paste0("./txts/", txt),
sep = "\n",
quote = "",
comment.char = "")
#find all metadata
speakers <- text[grepl("SPEAKERS|HOSTS", text$V1),]
speakers <- sub(".*:\t", "", speakers)
date <- lubridate::mdy(as.character(text[grepl("DATE", text$V1, fixed = TRUE),][[1]]))
title <- as.character(text[grepl("TITLE", text$V1, fixed = TRUE),][[1]])
title <- sub(".*:", "", title)
episode <- str_extract(as.character(text[grepl("EPISODE", text$V1, fixed = TRUE),][[1]]), "[0-9]+")
description <- as.character(text[grepl("DESCRIPTION", text$V1, fixed = TRUE),][[1]])
description <- sub(".*: ", "", description)
current_speaker <- str_extract(text$V1, "[A-Z]+")
is_copyright <- grepl("Copyright (c)", text$V1, fixed = TRUE)
#create a speaker_list (for filtering data)
speaker_list = tibble::enframe(as.vector(unlist(str_split(toupper(speakers), " & "))), name = NULL, value = "speaker")
speaker_list[["alias"]] <- str_extract(speaker_list[["speaker"]], "[A-Z]*")
speaker_list <- speaker_list %>% tidyr::gather(key = "col", value = "speaker", 1:2)
speaker_list <- speaker_list[, "speaker"]
name_regex <- paste(speaker_list[["speaker"]], collapse="|")
text3 <- text %>%
mutate(V1 = gsub(name_regex, "", V1),
V1 = str_replace(V1,"^:\\W*", ""))
#add all metadata and speakerdata to the dataframe:
text <- mutate(text,
current_speaker = current_speaker,
speakers = speakers,
date = date,
title = title,
episode = episode,
description = description,
copyright = is_copyright)
#loop over dataframe to find speaker in cases of longer monologues (e.i take the previous)
for (row in text$current_speaker) {
if (current_speaker[n] %ni% speaker_list$speaker & n > 1) {
current_speaker[n] = current_speaker[n-1]
}
test = data.frame(current_speaker)
n = n+1
}
#add new info to the dataframe (updated current_speaker + cleaned utterance) + filter by speaker + copyright
text <- text %>%
mutate(real_speaker = test$current_speaker,
utterance = text3$V1) %>%
filter(real_speaker %in% speaker_list[["speaker"]]) %>%
filter(copyright != TRUE) %>%
select(-c(copyright, V1, current_speaker))
}
#write.csv(final_data, file = "test.csv")
#Do you really want to copy the entire data frame each time you add a row? Probably not. Generate a list of each row using lapply and then stitch them together using do.call(rbind,...).
View(text)
library(tidyverse)
`%ni%` = Negate(`%in%`)
txts <- list.files(path = "./txts/", pattern = "*.txt")
n = 1
for (txt in txts[14]) {
#open the txt file
text <- read.table(paste0("./txts/", txt),
sep = "\n",
quote = "",
comment.char = "")
#find all metadata
speakers <- text[grepl("SPEAKERS|HOSTS", text$V1),]
speakers <- sub(".*:\t", "", speakers)
date <- lubridate::mdy(as.character(text[grepl("DATE", text$V1, fixed = TRUE),][[1]]))
title <- as.character(text[grepl("TITLE", text$V1, fixed = TRUE),][[1]])
title <- sub(".*:\\W", "", title)
episode <- str_extract(as.character(text[grepl("EPISODE", text$V1, fixed = TRUE),][[1]]), "[0-9]+")
description <- as.character(text[grepl("DESCRIPTION", text$V1, fixed = TRUE),][[1]])
description <- sub(".*: ", "", description)
current_speaker <- str_extract(text$V1, "[A-Z]+")
is_copyright <- grepl("Copyright (c)", text$V1, fixed = TRUE)
#create a speaker_list (for filtering data)
speaker_list = tibble::enframe(as.vector(unlist(str_split(toupper(speakers), " & "))), name = NULL, value = "speaker")
speaker_list[["alias"]] <- str_extract(speaker_list[["speaker"]], "[A-Z]*")
speaker_list <- speaker_list %>% tidyr::gather(key = "col", value = "speaker", 1:2)
speaker_list <- speaker_list[, "speaker"]
name_regex <- paste(speaker_list[["speaker"]], collapse="|")
text3 <- text %>%
mutate(V1 = gsub(name_regex, "", V1),
V1 = str_replace(V1,"^:\\W*", ""))
#add all metadata and speakerdata to the dataframe:
text <- mutate(text,
current_speaker = current_speaker,
speakers = speakers,
date = date,
title = title,
episode = episode,
description = description,
copyright = is_copyright)
#loop over dataframe to find speaker in cases of longer monologues (e.i take the previous)
for (row in text$current_speaker) {
if (current_speaker[n] %ni% speaker_list$speaker & n > 1) {
current_speaker[n] = current_speaker[n-1]
}
test = data.frame(current_speaker)
n = n+1
}
#add new info to the dataframe (updated current_speaker + cleaned utterance) + filter by speaker + copyright
text <- text %>%
mutate(real_speaker = test$current_speaker,
utterance = text3$V1) %>%
filter(real_speaker %in% speaker_list[["speaker"]]) %>%
filter(copyright != TRUE) %>%
select(-c(copyright, V1, current_speaker))
}
#write.csv(final_data, file = "test.csv")
#Do you really want to copy the entire data frame each time you add a row? Probably not. Generate a list of each row using lapply and then stitch them together using do.call(rbind,...).
library(tidyverse)
`%ni%` = Negate(`%in%`)
txts <- list.files(path = "./txts/", pattern = "*.txt")
n = 1
for (txt in txts[14]) {
#open the txt file
text <- read.table(paste0("./txts/", txt),
sep = "\n",
quote = "",
comment.char = "")
#find all metadata
speakers <- text[grepl("SPEAKERS|HOSTS", text$V1),]
speakers <- sub(".*:\t", "", speakers)
date <- lubridate::mdy(as.character(text[grepl("DATE", text$V1, fixed = TRUE),][[1]]))
title <- as.character(text[grepl("TITLE", text$V1, fixed = TRUE),][[1]])
title <- sub(".*:?\\W", "", title)
episode <- str_extract(as.character(text[grepl("EPISODE", text$V1, fixed = TRUE),][[1]]), "[0-9]+")
description <- as.character(text[grepl("DESCRIPTION", text$V1, fixed = TRUE),][[1]])
description <- sub(".*: ", "", description)
current_speaker <- str_extract(text$V1, "[A-Z]+")
is_copyright <- grepl("Copyright (c)", text$V1, fixed = TRUE)
#create a speaker_list (for filtering data)
speaker_list = tibble::enframe(as.vector(unlist(str_split(toupper(speakers), " & "))), name = NULL, value = "speaker")
speaker_list[["alias"]] <- str_extract(speaker_list[["speaker"]], "[A-Z]*")
speaker_list <- speaker_list %>% tidyr::gather(key = "col", value = "speaker", 1:2)
speaker_list <- speaker_list[, "speaker"]
name_regex <- paste(speaker_list[["speaker"]], collapse="|")
text3 <- text %>%
mutate(V1 = gsub(name_regex, "", V1),
V1 = str_replace(V1,"^:\\W*", ""))
#add all metadata and speakerdata to the dataframe:
text <- mutate(text,
current_speaker = current_speaker,
speakers = speakers,
date = date,
title = title,
episode = episode,
description = description,
copyright = is_copyright)
#loop over dataframe to find speaker in cases of longer monologues (e.i take the previous)
for (row in text$current_speaker) {
if (current_speaker[n] %ni% speaker_list$speaker & n > 1) {
current_speaker[n] = current_speaker[n-1]
}
test = data.frame(current_speaker)
n = n+1
}
#add new info to the dataframe (updated current_speaker + cleaned utterance) + filter by speaker + copyright
text <- text %>%
mutate(real_speaker = test$current_speaker,
utterance = text3$V1) %>%
filter(real_speaker %in% speaker_list[["speaker"]]) %>%
filter(copyright != TRUE) %>%
select(-c(copyright, V1, current_speaker))
}
#write.csv(final_data, file = "test.csv")
#Do you really want to copy the entire data frame each time you add a row? Probably not. Generate a list of each row using lapply and then stitch them together using do.call(rbind,...).
library(tidyverse)
`%ni%` = Negate(`%in%`)
txts <- list.files(path = "./txts/", pattern = "*.txt")
n = 1
for (txt in txts[14]) {
#open the txt file
text <- read.table(paste0("./txts/", txt),
sep = "\n",
quote = "",
comment.char = "")
#find all metadata
speakers <- text[grepl("SPEAKERS|HOSTS", text$V1),]
speakers <- sub(".*:\t", "", speakers)
date <- lubridate::mdy(as.character(text[grepl("DATE", text$V1, fixed = TRUE),][[1]]))
title <- as.character(text[grepl("TITLE", text$V1, fixed = TRUE),][[1]])
title <- sub(".*?:\\W", "", title)
episode <- str_extract(as.character(text[grepl("EPISODE", text$V1, fixed = TRUE),][[1]]), "[0-9]+")
description <- as.character(text[grepl("DESCRIPTION", text$V1, fixed = TRUE),][[1]])
description <- sub(".*: ", "", description)
current_speaker <- str_extract(text$V1, "[A-Z]+")
is_copyright <- grepl("Copyright (c)", text$V1, fixed = TRUE)
#create a speaker_list (for filtering data)
speaker_list = tibble::enframe(as.vector(unlist(str_split(toupper(speakers), " & "))), name = NULL, value = "speaker")
speaker_list[["alias"]] <- str_extract(speaker_list[["speaker"]], "[A-Z]*")
speaker_list <- speaker_list %>% tidyr::gather(key = "col", value = "speaker", 1:2)
speaker_list <- speaker_list[, "speaker"]
name_regex <- paste(speaker_list[["speaker"]], collapse="|")
text3 <- text %>%
mutate(V1 = gsub(name_regex, "", V1),
V1 = str_replace(V1,"^:\\W*", ""))
#add all metadata and speakerdata to the dataframe:
text <- mutate(text,
current_speaker = current_speaker,
speakers = speakers,
date = date,
title = title,
episode = episode,
description = description,
copyright = is_copyright)
#loop over dataframe to find speaker in cases of longer monologues (e.i take the previous)
for (row in text$current_speaker) {
if (current_speaker[n] %ni% speaker_list$speaker & n > 1) {
current_speaker[n] = current_speaker[n-1]
}
test = data.frame(current_speaker)
n = n+1
}
#add new info to the dataframe (updated current_speaker + cleaned utterance) + filter by speaker + copyright
text <- text %>%
mutate(real_speaker = test$current_speaker,
utterance = text3$V1) %>%
filter(real_speaker %in% speaker_list[["speaker"]]) %>%
filter(copyright != TRUE) %>%
select(-c(copyright, V1, current_speaker))
}
#write.csv(final_data, file = "test.csv")
#Do you really want to copy the entire data frame each time you add a row? Probably not. Generate a list of each row using lapply and then stitch them together using do.call(rbind,...).
library(tidyverse)
`%ni%` = Negate(`%in%`)
txts <- list.files(path = "./txts/", pattern = "*.txt")
n = 1
for (txt in txts[14]) {
#open the txt file
text <- read.table(paste0("./txts/", txt),
sep = "\n",
quote = "",
comment.char = "")
#find all metadata
speakers <- text[grepl("SPEAKERS|HOSTS", text$V1),]
speakers <- sub(".*:\t", "", speakers)
date <- lubridate::mdy(as.character(text[grepl("DATE", text$V1, fixed = TRUE),][[1]]))
title <- as.character(text[grepl("TITLE", text$V1, fixed = TRUE),][[1]])
title <- sub(".*?:", "", title)
episode <- str_extract(as.character(text[grepl("EPISODE", text$V1, fixed = TRUE),][[1]]), "[0-9]+")
description <- as.character(text[grepl("DESCRIPTION", text$V1, fixed = TRUE),][[1]])
description <- sub(".*: ", "", description)
current_speaker <- str_extract(text$V1, "[A-Z]+")
is_copyright <- grepl("Copyright (c)", text$V1, fixed = TRUE)
#create a speaker_list (for filtering data)
speaker_list = tibble::enframe(as.vector(unlist(str_split(toupper(speakers), " & "))), name = NULL, value = "speaker")
speaker_list[["alias"]] <- str_extract(speaker_list[["speaker"]], "[A-Z]*")
speaker_list <- speaker_list %>% tidyr::gather(key = "col", value = "speaker", 1:2)
speaker_list <- speaker_list[, "speaker"]
name_regex <- paste(speaker_list[["speaker"]], collapse="|")
text3 <- text %>%
mutate(V1 = gsub(name_regex, "", V1),
V1 = str_replace(V1,"^:\\W*", ""))
#add all metadata and speakerdata to the dataframe:
text <- mutate(text,
current_speaker = current_speaker,
speakers = speakers,
date = date,
title = title,
episode = episode,
description = description,
copyright = is_copyright)
#loop over dataframe to find speaker in cases of longer monologues (e.i take the previous)
for (row in text$current_speaker) {
if (current_speaker[n] %ni% speaker_list$speaker & n > 1) {
current_speaker[n] = current_speaker[n-1]
}
test = data.frame(current_speaker)
n = n+1
}
#add new info to the dataframe (updated current_speaker + cleaned utterance) + filter by speaker + copyright
text <- text %>%
mutate(real_speaker = test$current_speaker,
utterance = text3$V1) %>%
filter(real_speaker %in% speaker_list[["speaker"]]) %>%
filter(copyright != TRUE) %>%
select(-c(copyright, V1, current_speaker))
}
#write.csv(final_data, file = "test.csv")
#Do you really want to copy the entire data frame each time you add a row? Probably not. Generate a list of each row using lapply and then stitch them together using do.call(rbind,...).
