setwd("~/Desktop/ACN_exam/MR_classification/behavioral/paradigm_files_faceWords_exp")
library(tidyverse)
setwd("~~/Desktop/ACN_exam/MR_classification/behavioral/paradigm_files_faceWords_exp")
filenames <- list.files(pattern = "*.csv")
data <- data.frame()
#loop
for (i in filenames) {
file = read.csv(i)
data = rbind(data, file)
}
wordFace <- wordFace %>%
filter(correct_resp == 1) %>% #sort out incorrect responses
filter(rt > 0.05) %>% #sort out reaction times lower than the male minimum
mutate(image = ifelse(img == "image_stim_n.png", "fearful", "happy")) #rename the images
View(data)
data$rt >=0.05
wordFace <- data %>%
filter(correct_resp == 1) %>% #sort out incorrect responses
filter(rt > 0.05) %>% #sort out reaction times lower than the male minimum
mutate(image = ifelse(img == "image_stim_n.png", "fearful", "happy")) #rename the images
View(wordFace)
library(lmerTest)
library(cvms)
img_model <- lmerTest::lmer(rt ~ image + (1+image|ID), wordFace)
summary(img_model)
word_model <- lmerTest::lmer(rt ~ word_score_pc + abs(word_score_pc) + (1|ID), wordFace)
summary(word_model)
library(MuMIn)
r.squaredGLMM(img_model)
wordFace <- groupdata2::fold(wordFace, k = 4,
cat_col = 'image',
handle_existing_fold_cols = "remove",
id_col = 'ID') %>%
arrange(.folds)
wordFace <- data %>%
filter(correct_resp == 1) %>% #sort out incorrect responses
filter(rt > 0.05) %>% #sort out reaction times lower than the male minimum
mutate(image = ifelse(img == "image_stim_n.png", "fearful", "happy")) #rename the images
library(ggplot2)
library(Hmisc)
figure <- ggplot(wordFace, aes(word_label, rt, fill = word_label)) +
geom_violin() +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.5) +
scale_fill_manual(values = c("lightsteelblue","darkolivegreen3", "pink")) +
theme_classic() +
theme(legend.position = "none") +
labs(title = "Reaction time as a function of word sentiment", x = "Word Label", y = "Reaction Time")
figure
figure2 <- ggplot(wordFace, aes(image, rt, fill = image)) +
geom_violin() +
stat_summary(fun.y = mean, geom = "point") +
stat_summary(fun.data = mean_cl_normal, geom = "errorbar", width = 0.5) +
scale_fill_manual(values = c("lightsteelblue", "pink")) +
theme_classic() +
theme(legend.position = "none") +
labs(title = "Reaction time as a function of emoji", x = "Image", y = "Reaction Time")
figure2
library(tidyverse)
setwd("~~/Desktop/ACN_exam/MR_classification/behavioral/paradigm_files_faceWords_exp")
filenames <- list.files(pattern = "*.csv")
data <- data.frame()
#loop
for (i in filenames) {
file = read.csv(i)
data = rbind(data, file)
}
wordFace <- data %>%
filter(correct_resp == 1) %>% #sort out incorrect responses
filter(rt > 0.05) %>% #sort out reaction times lower than the male minimum
mutate(image = ifelse(img == "image_stim_n.png", "fearful", "happy")) #rename the images
View(wordFace)
unique(wordFace$ID)
img_model <- lmerTest::lmer(rt ~ image + (1|ID), wordFace)
summary(img_model)
img_model <- lmerTest::lmer(rt ~ image + (1+image|ID), wordFace)
summary(img_model)
img_model <- lmerTest::lmer(rt ~ image + (1|ID), wordFace)
summary(img_model)
library(MuMIn)
r.squaredGLMM(img_model)
img_model <- lmerTest::lmer(rt ~ image + (1|ID), wordFace)
summary(img_model)
library(MuMIn)
r.squaredGLMM(img_model)
setwd("~/Desktop/NLPexam")
data <- read.csv("df_with_topis.csv")
data <- read.csv("df_with_topics.csv")
View(data)
unique(data$episode)
ordered(unique(data$episode))
unique(data$topics)
type(data$topics)
class(data$topics)
setwd("~/Desktop/NLPexam")
data <- read.csv("df_with_topics.csv")
setwd("~/Desktop/NLPexam")
data <- read.csv("df_with_topics_hdp.csv")
View(data)
unique(data$topics)
setwd("~/Desktop/NLPexam")
data <- read.csv("df_with_topics_hdp.csv")
unique(data$topics)
View(data)
setwd("~/Desktop/NLPexam")
data <- read.csv("df_with_topics_hdp.csv")
